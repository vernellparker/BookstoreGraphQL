scalar Date

type Book {
  isbn: ID!
  title: String!
  publicationDate: Date
  stocked: Boolean!
  price: Float!
  authorId: String!
}

type Author {
  id: ID!
  name: String!
  BookIds: [String!]!
}

type Query {
  books: [Book!]!
  authors: [Author]!
  sortBooksByPrice(ascending: Boolean!): [Book!]!
  author(id:String!): Author!
  book(isbn:String!): Book!
}

input newBook {
  isbn: ID!
  title: String!
  publishingDate: Date!
  price: Float!
  stocked: Boolean!
  authorName: String!
}

input newAuthor {
  id: ID!
  name: String!
}

type Mutation {
  createBook(input: newBook!): Book!
  CreateAuthor(input: newAuthor): Author!
}